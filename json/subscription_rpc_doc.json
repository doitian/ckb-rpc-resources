{
  "components": {
    "schemas": {}
  },
  "info": {
    "description": " RPC Module Subscription that CKB node will push new messages to subscribers, support with WebSocket or TCP.\n\n RPC subscriptions require a full duplex connection. CKB offers such connections in the form of\n TCP (enable with `rpc.tcp_listen_address` configuration option) and WebSocket (enable with\n `rpc.ws_listen_address`).\n\n ###### Examples\n\n TCP RPC subscription:\n\n ```bash\n telnet localhost 18114\n > {\"id\": 2, \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"new_tip_header\"]}\n < {\"jsonrpc\":\"2.0\",\"result\":\"0x0\",\"id\":2}\n < {\"jsonrpc\":\"2.0\",\"method\":\"subscribe\",\"params\":{\"result\":\"...block header json...\",\n\"subscription\":0}}\n < {\"jsonrpc\":\"2.0\",\"method\":\"subscribe\",\"params\":{\"result\":\"...block header json...\",\n\"subscription\":0}}\n < ...\n > {\"id\": 2, \"jsonrpc\": \"2.0\", \"method\": \"unsubscribe\", \"params\": [\"0x0\"]}\n < {\"jsonrpc\":\"2.0\",\"result\":true,\"id\":2}\n ```\n\n WebSocket RPC subscription:\n\n ```javascript\n let socket = new WebSocket(\"ws://localhost:28114\")\n\n socket.onmessage = function(event) {\n   console.log(`Data received from server: ${event.data}`);\n }\n\n socket.send(`{\"id\": 2, \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"new_tip_header\"]}`)\n\n socket.send(`{\"id\": 2, \"jsonrpc\": \"2.0\", \"method\": \"unsubscribe\", \"params\": [\"0x0\"]}`)\n ```",
    "title": "subscription_rpc",
    "version": "0.115.0-pre"
  },
  "methods": [],
  "openrpc": "1.2.6"
}